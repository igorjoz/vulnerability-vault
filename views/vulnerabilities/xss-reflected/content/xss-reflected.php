<style>
    .page__section form {
        margin-bottom: 20px;
    }

    .page__section form h1 {
        margin-bottom: 10px;
        font-size: 20px;
    }

    .page__section form input[type="text"],
    .page__section form input[type="password"] {
        width: 100%;
        padding: 10px;
        margin-bottom: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
        box-sizing: border-box;
    }

    .page__section form input[type="submit"] {
        width: 100%;
        padding: 10px;
        border: none;
        border-radius: 5px;
        background-color: #007bff;
        color: #fff;
        cursor: pointer;
    }

    .page__section form input[type="submit"]:hover {
        background-color: #0056b3;
    }

    code {
        text-align: left;
        display: block;
        padding: 10px;
        margin: 10px 0;
        border: 1px solid #ddd;
        border-radius: 5px;
        background-color: #f9f9f9;
    }

    .language-sql {
        text-align: center;
    }

    form {
        margin-top: 30px;
    }

    h1 {
        margin-top: 30px;
    }

    .user-info {
        margin-top: 20px;
        width: 90%;
        padding: 20px;
        border: none;
        border-radius: 10px;
        background-color: #483D8B;
        color: #fff;
        text-align: center;
        box-shadow: 0px 4px 8px 0px rgba(0, 0, 0, 0.2);
        font-size: 1.2em;
        display: block;
        margin-left: auto;
        margin-right: auto;
    }
</style>

<main class="page__main">
    <article class="page__article">
        <header class="page__article-header">
            <h1 class="page__article-header-text">
                Cross-site Scripting (XSS) Reflected
            </h1>
        </header>

        <section class="page__section page__section--center">
            <h1>
                Formularz podatny na atak
            </h1>

            <form method="GET" action="">
                <label for="user-input">Podaj imię:</label>
                <input type="text" id="user-input" name="input">
                <button type="submit">Submit</button>
            </form>
            <br>

            <?php
            // Reflected XSS vulnerability
            if (isset($_GET['input'])) {
                echo "You entered: " . $_GET['input'];
            }
            ?>

            <div>
                <h2>Opis ataku XSS Reflected</h2>
                <p>
                    Podatność typu Cross-site Scripting Reflected polega na tym, że wprowadzone dane przez użytkownika są wyświetlane na stronie bez uprzedniej sanityzacji, czyli sprawdzenia na backendzie strony internetowej czy wprowadzone dane nie zawierają znaczników HTML czy kodu JS. Niesanityzowanie wejścia może prowadzić do wykonania dowolnego złośliwego kodu JavaScript.
                </p>
                <p>
                    Na przykład, jeśli użytkownik wprowadzi w polu tekstowym:
                <pre><code class="language-html">&lt;script&gt;alert('XSS')&lt;/script&gt;</code></pre>
                to po przesłaniu formularza, przeglądarka wykona ten kod JavaScript, co może prowadzić do wyświetlenia alertu z napisem "XSS".
                </p>
            </div>
        </section>

        <section class="page__section page__section--center">
            <h1>
                Zabezpieczony formularz
            </h1>

            <form method="GET" action="">
                <label for="user-input">Podaj imię:</label>
                <input type="text" id="user-input" name="input">
                <button type="submit">Submit</button>
            </form>
            <br>

            <?php
            // Mitigated XSS vulnerability
            if (isset($_GET['input'])) {
                echo "You entered: " . htmlspecialchars($_GET['input'], ENT_QUOTES, 'UTF-8');
            }
            ?>

            <div>
                <h2>Opis zabezpieczenia</h2>
                <p>
                    Aby zabezpieczyć się przed atakami typu Reflected XSS, należy odpowiednio przetwarzać dane wprowadzane przez użytkowników przed ich wyświetleniem na stronie. Jednym ze sposobów jest użycie funkcji <code>htmlspecialchars</code>, która konwertuje specjalne znaki na ich bezpieczne odpowiedniki HTML.
                </p>
                <p>
                    W bezpiecznej wersji formularza, jeśli użytkownik wprowadzi złośliwy kod, taki jak:
                <pre><code class="language-html">&lt;script&gt;alert('XSS')&lt;/script&gt;</code></pre>
                zostanie on wyświetlony na stronie jako tekst, a nie jako kod JavaScript, dzięki czemu nie dojdzie do jego wykonania.
                </p>
            </div>
        </section>

        <section class="page__section page__section--center">
            <h1>
                Przykłady użycia
            </h1>

            <p>
                1. Wprowadź <code>&lt;h1&gt;Jasio&lt;/h1&gt;</code> w polu tekstowym i kliknij "Submit". W wersji wrażliwej na atak zobaczysz duży nagłówek z tekstem "Jasio". W wersji bezpiecznej zobaczysz tekst <code>&lt;h1&gt;Jasio&lt;/h1&gt;</code>.
            </p>
            <p>
                2. Wprowadź <code>&lt;script&gt;alert(1)&lt;/script&gt;</code> w polu tekstowym i kliknij "Submit". W wersji wrażliwej na atak pojawi się alert z liczbą "1". W wersji bezpiecznej zobaczysz tekst <code>&lt;script&gt;alert(1)&lt;/script&gt;</code>.
            </p>
            <p>
                3. Wprowadź <code>&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/dQw4w9WgXcQ?si=cxUyYkeDs3rk_qd9" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;</code> w polu tekstowym i kliknij "Submit". W wersji wrażliwej na atak zobaczysz osadzony film z YouTube. W wersji bezpiecznej zobaczysz tekst <code>&lt;iframe ...&gt;&lt;/iframe&gt;</code>.
            </p>

            <?php PathService::prevNextButton('/file-uploader', '/xss-stored', 'File Uploader', 'XSS Stored'); ?>
        </section>
    </article>
</main>