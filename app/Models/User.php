<?php

require_once '../app/Core/Model.php';

class User extends Model {

    public function getUnsafe($username, $password) {
        $stmt = $this->pdo->query("SELECT * FROM users WHERE username = '$username' AND password = '$password'");
        return $stmt->fetch();
    }

    public function getSafe($username, $password) {
        $stmt = $this->pdo->prepare('SELECT * FROM users WHERE username = ? AND password = ?');
        $stmt->execute([$username, $password]);
        return $stmt->fetch();
    }

    public function registerSafe($username, $password) {
        $stmt = $this->pdo->prepare('INSERT INTO users (username, password) VALUES (?, ?)');
        $stmt->execute([$username, $password]);
        return $stmt->rowCount();
    }

    public function registerUnSafe($username, $password) {
        $stmt = $this->pdo->query("INSERT INTO users (username, password) VALUES ('$username', '$password')");
        return $stmt->rowCount();
    }

    public function createDatabase() {
        $stmt = $this->pdo->query("SHOW DATABASES LIKE 'vulnerability_vault'");
        $result = $stmt->fetch();

        if (!$result) {
            $stmt = $this->pdo->query("CREATE DATABASE IF NOT EXISTS vulnerability_vault");
            
            $stmt = $this->pdo->query("CREATE TABLE IF NOT EXISTS users (
                id INT(6) UNSIGNED AUTO_INCREMENT PRIMARY KEY,
                username VARCHAR(30) NOT NULL,
                password VARCHAR(30) NOT NULL
            )");

            $stmt = $this->pdo->query("INSERT INTO users (username, password) VALUES ('admin', 'admin')");
            $stmt = $this->pdo->query("INSERT INTO users (username, password) VALUES ('user', 'user')");
            $stmt = $this->pdo->query("INSERT INTO users (username, password) VALUES ('test', 'test')");
        }
    }
}